@inherits LayoutComponentBase
@using MudBlazor
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudThemeProvider @bind-IsDarkMode="isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudDrawer @bind-Open="drawerOpen" Elevation="1" Variant="DrawerVariant.Temporary" Class="nav-scrollable d-flex flex-column" Anchor="Anchor.Left" Color="Color.Default">
               <!-- Navigation -->
        <MudNavMenu Margin="Margin.Normal" Color="Color.Success">
            <MudText Typo="Typo.h6" Class="px-4">RanAway</MudText>
            <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">SoftServe Project Labs</MudText>
            <MudDivider DividerType="DividerType.Inset" />
            <MudNavGroup Title="Account" Icon="@Icons.Material.Filled.AccountCircle" Expandable="true">
                <MudNavLink Href="/login" Icon="@Icons.Material.Filled.Login">Login</MudNavLink>
                <MudNavLink Href="/register" Icon="@Icons.Material.Filled.PersonAdd">Register</MudNavLink>
            </MudNavGroup>
            <MudDivider DividerType="DividerType.Inset" />
            <MudNavGroup Title="Internal Admin" Icon="@Icons.Material.Filled.AddBox" Expandable="true" >
                <MudNavLink Href="intadmin/catalog" Icon="@Icons.Material.Filled.Settings">Catalog</MudNavLink>
                <MudNavLink Href="home/placeholder1" Icon="@Icons.Material.Filled.FiberManualRecord">Placeholder 1</MudNavLink>
                <MudNavLink Href="home/placeholder2" Icon="@Icons.Material.Filled.FiberManualRecord">Placeholder 2</MudNavLink>
                <MudNavLink Href="home/placeholder2" Icon="@Icons.Material.Filled.FiberManualRecord">Placeholder 2</MudNavLink>
            </MudNavGroup>
            <MudDivider DividerType="DividerType.Inset" />
            <MudNavGroup Title="Customers" Icon="@Icons.Material.Filled.List" Expandable="true" >
                <MudNavLink Href="customers/placeholder1" Icon="@Icons.Material.Filled.FiberManualRecord">Placeholder 1</MudNavLink>
                <MudNavLink Href="customers/placeholder2" Icon="@Icons.Material.Filled.FiberManualRecord">Placeholder 2</MudNavLink>
            </MudNavGroup>
            <MudDivider DividerType="DividerType.Inset" />
            <MudNavGroup Title ="Logistics" Icon="@Icons.Material.Filled.Warehouse" Expandable="true" >               
                <MudNavLink Href="/warehouse-api-testing" Icon="@Icons.Material.Filled.Warehouse">Warehouse APIs</MudNavLink>
                <MudNavLink Href="/branch-api-testing" Icon="@Icons.Material.Filled.Warehouse">Branch APIs</MudNavLink>
                <MudNavLink Href="/warehouses/items" Icon="@Icons.Material.Filled.Warehouse">Branch APIs</MudNavLink>
            </MudNavGroup>
        </MudNavMenu>

        <MudSpacer />

        <!-- Footer/Status Bar -->
        <MudDivider Class="mt-2" />
        <MudText Typo="Typo.caption" Align="Align.Center" Class="mb-2 mt-2">© 2025 Your Company</MudText>
    </MudDrawer>

    <MudMainContent>
        <MudAppBar Color="Color.Info" Elevation="1" Dense="true" Class="top-row ps-3">
            <div class="d-flex align-items-center w-100">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Dark" Edge="Edge.End" OnClick="ToggleNavMenu" Title="Navigation menu" />
                <MudSpacer />
                <!-- AppBar Actions -->
                <MudIconButton Icon="@Icons.Material.Filled.Notifications" Color="Color.Inherit" Title="Notifications" />
                <MudMenu Icon="@Icons.Material.Filled.AccountBox">
                    <MudMenu Icon="@Icons.Material.Filled.AccountCircle" Label="@userName">
                        @if (!isAuthenticated)
                        {
                            <MudMenuItem Href="/login">Login</MudMenuItem>
                            <MudMenuItem Href="/register">Register</MudMenuItem>
                        }
                        else
                        {
                            <MudMenuItem>Profile</MudMenuItem>
                            <MudMenuItem OnClick="Logout">Logout</MudMenuItem>
                        }
                    </MudMenu>
                </MudMenu>
            </div>
        </MudAppBar>

        <MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool drawerOpen = false;
    private bool isDarkMode = false;
    private bool isAuthenticated;
    private string userName = "Guest";

    private void ToggleNavMenu()
    {
        drawerOpen = !drawerOpen;
    }

    protected override async Task OnInitializedAsync()
    {
        await UpdateAuthState();
    }

    private async Task UpdateAuthState()
    {
        var token = await JS.InvokeAsync<string>("localStorage.getItem", "authToken");
        isAuthenticated = !string.IsNullOrEmpty(token);
        userName = isAuthenticated ? GetUserNameFromToken(token) : "Guest";
        StateHasChanged();
    }

    private async Task Logout()
    {
        await JS.InvokeVoidAsync("localStorage.removeItem", "authToken");
        isAuthenticated = false;
        userName = "Guest";
        Snackbar.Add("Logged out successfully.", Severity.Info);
        Navigation.NavigateTo("/login", forceLoad: true);
    }

    // Simple JWT parsing for demo (use a library for production)
    private string GetUserNameFromToken(string token)
    {
        if (string.IsNullOrEmpty(token)) return "Guest";
        try
        {
            var payload = token.Split('.')[1];
            var json = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(PadBase64(payload)));
            var name = System.Text.Json.JsonDocument.Parse(json).RootElement.GetProperty("name").GetString();
            return name ?? "User";
        }
        catch
        {
            return "User";
        }
    }

    private string PadBase64(string base64)
    {
        switch (base64.Length % 4)
        {
            case 2: return base64 + "==";
            case 3: return base64 + "=";
            default: return base64;
        }
    }
}
