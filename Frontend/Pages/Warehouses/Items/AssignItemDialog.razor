@inject HttpClient Http
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6">Assign Item to Warehouse</MudText>
        <MudTextField @bind-Value="Sku" Label="SKU" Required="true" />
        <MudTextField @bind-Value="Quantity" Label="Quantity" Required="true" Type="number" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="AssignItem" Color="Color.Primary">Assign</MudButton>
        <MudButton OnClick="MudDialog.Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public int WarehouseId { get; set; }
    [CascadingParameter] public IMudDialogInstance MudDialog { get; set; }
    private int Sku { get; set; }
    private int Quantity { get; set; }

    private async Task AssignItem()
    {
        var dto = new { WarehouseId, Sku, CurrentStock = Quantity };
        var response = await Http.PostAsJsonAsync($"api/warehouses/{WarehouseId}/items", dto);
        if (response.IsSuccessStatusCode)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            // Optionally show error
            var error = await response.Content.ReadAsStringAsync();
            Snackbar.Add($"Error: {error}", Severity.Error);
        }
    }
}
