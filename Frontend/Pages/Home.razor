@page "/"
@using softserve.projectlabs.Shared.DTOs
@using softserve.projectlabs.Shared.Interfaces
@inject IHttpClientFactory HttpClientFactory

@inject HttpClient Http
@inject NavigationManager Navigation
@inject ILogger<Home> Logger

<PageTitle>Dashboard</PageTitle>

<h1 class="text-center my-4">Dashboard</h1>

<div class="container">
    <div class="row">

        <!-- Warehouses Section -->
        <div class="col-md-6">
            <h2 class="text-center">Warehouses</h2>
            <div class="card">
                <div class="card-body">
                    @if (warehouses == null)
                    {
                        <p>Loading warehouses...</p>
                    }
                    else if (!warehouses.Any())
                    {
                        <p>No warehouses found.</p>
                    }
                    else
                    {
                        <ul class="list-group">
                            @foreach (var warehouse in warehouses)
                            {
                                <li class="list-group-item">
                                    <strong>@warehouse.Name</strong> - @warehouse.Location
                                </li>
                            }
                        </ul>
                    }

                    <div class="alert alert-info">
                        API Base: @(HttpClientFactory.CreateClient("API").BaseAddress)
                        <p>Component rendered at @DateTime.Now.ToString("HH:mm:ss.fff")</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@code {
    private List<WarehouseResponseDto> warehouses = new();
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var http = HttpClientFactory.CreateClient("API");

            // Debugging output
            Console.WriteLine($"Making request to: {http.BaseAddress}api/Warehouse");

            var response = await http.GetAsync("api/Warehouse");

            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Received: {json}");

                warehouses = await response.Content.ReadFromJsonAsync<List<WarehouseResponseDto>>();
            }
            else
            {
                errorMessage = $"API Error: {response.StatusCode}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Connection failed: {ex.Message}";
            Logger.LogError(ex, "Full error details");
        }
    }
}


